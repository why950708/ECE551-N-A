|UART_test
clk => clk.IN3
RST_n => RST_n.IN1
next_byte => next_byte.IN1
LEDs[0] <= UART_rcv:rx.rx_data[0]
LEDs[1] <= UART_rcv:rx.rx_data[1]
LEDs[2] <= UART_rcv:rx.rx_data[2]
LEDs[3] <= UART_rcv:rx.rx_data[3]
LEDs[4] <= UART_rcv:rx.rx_data[4]
LEDs[5] <= UART_rcv:rx.rx_data[5]
LEDs[6] <= UART_rcv:rx.rx_data[6]
LEDs[7] <= UART_rcv:rx.rx_data[7]


|UART_test|reset_synch:iRST
clk => rst_n~reg0.CLK
clk => q1.CLK
RST_n => rst_n~reg0.ACLR
RST_n => q1.ACLR
rst_n <= rst_n~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART_test|rise_edge_detector:button
next_byte => Sig_FF1.DATAIN
rst_n => ~NO_FANOUT~
clk => Sig_FF3.CLK
clk => Sig_FF2.CLK
clk => Sig_FF1.CLK
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|UART_test|UART_tx:tx
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => tx_done~reg0.CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => shift_reg[9].CLK
clk => state~1.DATAIN
rst_n => shift_reg[0].PRESET
rst_n => shift_reg[1].PRESET
rst_n => shift_reg[2].PRESET
rst_n => shift_reg[3].PRESET
rst_n => shift_reg[4].PRESET
rst_n => shift_reg[5].PRESET
rst_n => shift_reg[6].PRESET
rst_n => shift_reg[7].PRESET
rst_n => shift_reg[8].PRESET
rst_n => shift_reg[9].PRESET
rst_n => tx_done~reg0.ACLR
rst_n => baud_cnt[0].ACLR
rst_n => baud_cnt[1].ACLR
rst_n => baud_cnt[2].ACLR
rst_n => baud_cnt[3].ACLR
rst_n => baud_cnt[4].ACLR
rst_n => baud_cnt[5].ACLR
rst_n => baud_cnt[6].ACLR
rst_n => baud_cnt[7].ACLR
rst_n => baud_cnt[8].ACLR
rst_n => baud_cnt[9].ACLR
rst_n => baud_cnt[10].ACLR
rst_n => baud_cnt[11].ACLR
rst_n => bit_cnt[0].ACLR
rst_n => bit_cnt[1].ACLR
rst_n => bit_cnt[2].ACLR
rst_n => bit_cnt[3].ACLR
rst_n => state~3.DATAIN
trmt => load.DATAB
trmt => Selector1.IN2
trmt => clr_done.DATAB
trmt => Selector0.IN2
TX <= shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
tx_data[0] => shift_reg.DATAB
tx_data[1] => shift_reg.DATAB
tx_data[2] => shift_reg.DATAB
tx_data[3] => shift_reg.DATAB
tx_data[4] => shift_reg.DATAB
tx_data[5] => shift_reg.DATAB
tx_data[6] => shift_reg.DATAB
tx_data[7] => shift_reg.DATAB
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART_test|UART_rcv:rx
rx_rdy_clr => always7.IN1
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => rx_rdy~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => baud_cnt[7].CLK
clk => baud_cnt[8].CLK
clk => baud_cnt[9].CLK
clk => baud_cnt[10].CLK
clk => baud_cnt[11].CLK
clk => RX2.CLK
clk => RX1.CLK
clk => state~1.DATAIN
rst_n => baud_cnt[0].ACLR
rst_n => baud_cnt[1].ACLR
rst_n => baud_cnt[2].ACLR
rst_n => baud_cnt[3].ACLR
rst_n => baud_cnt[4].ACLR
rst_n => baud_cnt[5].ACLR
rst_n => baud_cnt[6].ACLR
rst_n => baud_cnt[7].ACLR
rst_n => baud_cnt[8].ACLR
rst_n => baud_cnt[9].ACLR
rst_n => baud_cnt[10].ACLR
rst_n => baud_cnt[11].ACLR
rst_n => rx_data[0]~reg0.ACLR
rst_n => rx_data[1]~reg0.ACLR
rst_n => rx_data[2]~reg0.ACLR
rst_n => rx_data[3]~reg0.ACLR
rst_n => rx_data[4]~reg0.ACLR
rst_n => rx_data[5]~reg0.ACLR
rst_n => rx_data[6]~reg0.ACLR
rst_n => rx_data[7]~reg0.ACLR
rst_n => rx_rdy~reg0.ACLR
rst_n => bit_cnt[0].ACLR
rst_n => bit_cnt[1].ACLR
rst_n => bit_cnt[2].ACLR
rst_n => bit_cnt[3].ACLR
rst_n => shift_reg[0].ACLR
rst_n => shift_reg[1].ACLR
rst_n => shift_reg[2].ACLR
rst_n => shift_reg[3].ACLR
rst_n => shift_reg[4].ACLR
rst_n => shift_reg[5].ACLR
rst_n => shift_reg[6].ACLR
rst_n => shift_reg[7].ACLR
rst_n => shift_reg[8].ACLR
rst_n => state~3.DATAIN
RX => RX1.DATAIN
rx_rdy <= rx_rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


